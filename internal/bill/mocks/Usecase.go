// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import bill "github.com/fairyhunter13/tax-calculator/internal/bill"
import mock "github.com/stretchr/testify/mock"

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

// GetBill provides a mock function with given fields:
func (_m *Usecase) GetBill() ([]bill.Bill, bill.Total) {
	ret := _m.Called()

	var r0 []bill.Bill
	if rf, ok := ret.Get(0).(func() []bill.Bill); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]bill.Bill)
		}
	}

	var r1 bill.Total
	if rf, ok := ret.Get(1).(func() bill.Total); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(bill.Total)
	}

	return r0, r1
}

// LoadData provides a mock function with given fields:
func (_m *Usecase) LoadData() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
